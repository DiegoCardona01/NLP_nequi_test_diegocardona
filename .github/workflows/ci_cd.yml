name: CI/CD Pipeline

on:
  workflow_run:
    workflows: ["Test"]
    types:
      - completed

jobs:
  ci-cd:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      # DESPLIEGUE HACIA ELASTIC BEANSTALK
      - name: Install AWS CLI
        run: |
          pip install --upgrade pip
          pip install awscli

      - name: Create deployment ZIP file
        run: |
          zip -r deploy.zip Dockerfile appi initializer.sh
          ls -lh deploy.zip

      - name: Upload ZIP to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws s3 cp deploy.zip s3://${{ secrets.S3_BUCKET_NAME }}/deploy_model/deploy-${{ github.run_number }}.zip \
          --region $AWS_REGION

      - name: Create new Elastic Beanstalk version
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.EB_APP_NAME }} \
            --version-label v-${{ github.run_number }} \
            --source-bundle S3Bucket=${{ secrets.S3_BUCKET_NAME }},S3Key=deploy_model/deploy-${{ github.run_number }}.zip \
            --region $AWS_REGION

      - name: Deploy new version to Elastic Beanstalk environment
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.EB_ENV_NAME }} \
            --version-label v-${{ github.run_number }} \
            --region $AWS_REGION
